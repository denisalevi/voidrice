# {{{ general tmux settings
    # reset tmux keybinding if reset file exists
    # to generate it run
    # tmux -f /dev/null -L temp start-server \; list-keys > ~/.tmux.reset.conf
    # and escape (\) semicolons and put #,$,~ into single quotes ('...')
    if-shell "test -f ~/.tmux.reset.conf" \
        "unbind -a \; source ~/.tmux.reset.conf"

    # set options
    set -g default-terminal "screen-256color"
    set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:XT"
    set -g history-limit 10000
    set -g bell-action any

    # Version-specific commands
    # See: https://github.com/tmux/tmux/blob/master/CHANGES
    run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
        "set -g mouse-select-pane on; set -g mode-mouse on; \
        set -g mouse-resize-pane on; set -g mouse-select-window on"

    # In version 2.1 "mouse" replaced the previous 4 mouse options
    if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
        "set -g mouse on"

    # UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
        "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

    setw -g automatic-rename on
    setw -g clock-mode-style 24
    setw -g clock-mode-colour green

    # Use Vi mode
    setw -g mode-keys vi
    #set -g status-keys vi
    set -s escape-time 0
    setw -g xterm-keys on

    set -g status-keys emacs

    # Status Bar
    set -g status-interval 1
    set -g status-bg default
    set -g status-fg white
    #setw -g window-status-current-bg blue               # Highlighting the active window in status bar
    set -g status-left '#[fg=white]#H#[default]'
    set -g status-right '#[fg=green]#(cut -d " " -f 1,2,4 /proc/loadavg) #[fg=white]%Y-%m-%d %H:%M:%S#[default]'

    # pane borders
     #set -g pane-active-border-fg white
    #set -g pane-active-border-bg default

    # Terminal emulator window title
    set -g set-titles on
    set -g set-titles-string '#S:#I.#P #W'

    # Notifying if other windows has activities
    setw -g monitor-activity on
    set -g visual-activity off

    # notify when a visual bell is sent from another window (finishing process)
    # send bell after process finish with <command>; echo -e '\a'
    set-window-option -g visual-bell on
    set-window-option -g bell-action other

    # restoring neovim sessions
    set -g @resurrect-strategy-nvim 'session'
    # Restore pane contents
    set -g @resurrect-capture-pane-contents 'on'
    # Also restore ssh processes
    set -g @resurrect-processes 'ssh'

    # Automatically restore tmux state
    set -g @continuum-restore 'on'

# }}}

# {{{ key bindings

    # command for accesing nested tmux session
    bind-key -n C-q send-prefix

    #bind-key s save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"
    #bind-key y run "tmux save-buffer - | xclip -i -sel clipboard &>/dev/null"

    # Toggle mouse on/off with Ctrl-b Alt-m
    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
        'bind M-m run-shell "if [[ $(tmux showw -g | grep mode-mouse.*on) ]]; then export toggle=off; else export toggle=on; fi; tmux display-message \"Mouse: \$toggle\"; tmux set -g mode-mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set -g \$cmd \$toggle &> /dev/null; done;"'
    # In version 2.1 "mouse" replaced the previous 4 mouse options
    if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
        'bind M-m set -g mouse \; display "Mouse #{?mouse,ON,OFF}"'


    # use current directory in split-window
    # (new-window uses default directory where tmus was started)
    bind '"' split-window -c "#{pane_current_path}"
    bind % split-window -h -c "#{pane_current_path}"
    #bind c new-window -c "#{default_path}"

    # split panes using | and _
    bind | split-window -h -c "#{pane_current_path}"
    bind _ split-window -v -c "#{pane_current_path}"

    # pane movement
    bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
    bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
    # tmux-ressurect uses C-s and C-r for save/restore, to change, uncomment here:
    # set -g @resurrect-save 'S'
    # set -g @resurrect-restore 'R'

    # kill entire tmux session
    bind C-x confirm-before -p "kill-session #S? (y/n)" kill-session

# }}}

# source local tmux config file if it exists
if-shell "test -f ~/.tmux.local.conf" "source ~/.tmux.local.conf"

# {{{ plugins

    # List of plugins
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    # C-hjkl for navigation vim splits and tmux panes
    set -g @plugin 'christoomey/vim-tmux-navigator'
    # Store/restore tmux sessions
    set -g @plugin 'tmux-plugins/tmux-resurrect'
    # Autmoatically store tmux session every 15 min
    set -g @plugin 'tmux-plugins/tmux-continuum'
    # Enable yanking to system clipboard with y in copy-mode and with mouse
    # Also prefix-y copies command line (e.g. in bash) and prefix-Y copies PWD
    # of current pane into clipboard
    set -g @plugin 'tmux-plugins/tmux-yank'

    # Other examples:
    # set -g @plugin 'github_username/plugin_name'
    # set -g @plugin 'git@github.com/user/plugin'
    # set -g @plugin 'git@bitbucket.com/user/plugin'

    # # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    run '~/.tmux/plugins/tpm/tpm'

# }}}

# vim: tabstop=4 shiftwidth=4 expandtab smarttab smartindent
