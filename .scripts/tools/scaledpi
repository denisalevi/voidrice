#!/bin/python

# This script takes care of setting different configs for HiDPI monitor
# switching. Currently only 2x scale implemented for Firefox, GTK 3 and
# Xressources.
# TODO: Qt 5 applications can also be scaled by setting
# export QT_AUTO_SCREEN_SCALE_FACTOR=1 (add to ~/.gtk-3-scale)
# https://wiki.archlinux.org/index.php/HiDPI#Qt_5
# TODO: 150% scaling can also be achieved by setting GDK_SCALE=2 (too big) and
# then reducing it with xrandr --scale 1.333x1.333 (uses screen scaling and
# takes non-integers)
# TODO: notify-send <summary> <message> prints the summary in bold and message
# not. Currently all messages are printed as summary. Change that.


### SCALING CONFIGS
##############################################################
# Thinkpad T480 screen, 150% scaling
config_2k = {
    # GDK 3 (GTK 3) icon scaling
    # GDK_SCALE only takes integers, so stay at 100%
    'GDK_SCALE': 1,
    'GDK_DPI_SCALE': 1,
    # Firefox
    'layout.css.devPixelsPerPx': 1.5,
    # Xressources
    'Xft.dpi': 140  # 150%
}

# 4k Dell monitor, 200% scaling
config_4k = {
    # GDK 3 (GTK 3) icon scaling
    'GDK_SCALE': 2,
    'GDK_DPI_SCALE': 0.5,
    # Firefox
    'layout.css.devPixelsPerPx': 2,
    # Xressources
    'Xft.dpi': 192
}
##############################################################


import argparse

parser = argparse.ArgumentParser(description="Set screen DPI scaling")
parser.add_argument('resolution', type=int, #choices=['2k', '4k'],
                    help=("Set the screen resolution. 2 and 4 are interpreted as "
                          "2000 and 4000."))
args = parser.parse_args()

import subprocess
import os
import time

def report(message, error=False, **kwargs):
    """ Python print and notify-send message. """
    urgency = 'normal'
    if error:
        urgency = 'critical'
    print(message)
    subprocess.run(['notify-send', #'--expire-time=2000',
                    f'--urgency={urgency}', message],
                   **kwargs)

if args.resolution == 2:
    k = 2
elif args.resolution == 4:
    k = 4
elif args.resolution < 2900:
    k = 2
elif args.resolution > 3800:
    k = 4

if k == 2:
    config = config_2k
elif k == 4:
    config = config_4k
else:
    msg = f"Only 2k and 4k display configs are available, got {args.resolution}"
    report(msg, error=True)
    raise NotImplementedError(msg)


# Set firefox
dppp = config['layout.css.devPixelsPerPx']
ret = subprocess.run([f'ff-set-preference',
                      'layout.css.devPixelsPerPx', f'{dppp}'], check=True)
if ret.returncode:
    msg_firefox = "ERROR setting layout.css.devPixelsPerPx"
    error_firefox = True
else:
    msg_firefox = f"Firefox DPI:\n {dppp}"
    error_firefox = False

# set GTK 3
gtk_config = f"""
# This file is generated by ~/.scripts/tools/scaledpi and changes will be
# overwritten at next run
# Changing these values will effect scaling in eclipse, which sources this file
# in ~/.config/aliasrc
export GDK_SCALE={config['GDK_SCALE']}
export GDK_DPI_SCALE={config['GDK_DPI_SCALE']}
"""
with open(os.path.expanduser('~/.gtk-3-scale'), 'w') as file:
    file.write(gtk_config)
msg_GTK = (f"GDK_SCALE={config['GDK_SCALE']}\n"
           f"GDK_DPI_SCALE={config['GDK_DPI_SCALE']}")

# Set Xressources
tmp_xressource = '/tmp/.Xressource-tmp'
with open(tmp_xressource, 'w') as file:
    file.write(f"Xft.dpi : {config['Xft.dpi']}")
ret = subprocess.run(['xrdb', '-merge', tmp_xressource])
if ret.returncode:
    msg_Xtf = f"ERROR setting xrdb Xft.dpi"
    error_Xft = True
else:
    msg_Xtf = f"Xft.dpi:\n {config['Xft.dpi']}"
    error_Xft = False

ret = subprocess.run(['remaps'])
if ret.returncode:
    report("ERROR in remaps", error=True)

ret = subprocess.run(['i3-msg', 'restart'], stdout=subprocess.DEVNULL)
if ret.returncode:
    msg_i3 = "ERROR restarting i3"
    error_i3 = True
else:
    msg_i3 = "Restarted i3"
    error_i3 = False

time.sleep(1)

report(msg_firefox, error=error_firefox)
report(msg_GTK, error=False)
report(msg_Xtf, error=error_Xft)
report(msg_i3, error=error_i3)
